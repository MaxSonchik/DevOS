name: Build DevOS ISO (Testing with Releng Profile)

on:
  push:
    branches: [ "arch" ]
  workflow_dispatch:

jobs:
  build-and-release-testing:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build ISO using Releng Profile
        run: |
          docker run --rm --privileged -v ${{ github.workspace }}:/data archlinux:latest \
          /bin/bash -c "
            set -e

            echo '--- Preparing Environment ---'
            pacman -Syu --noconfirm archiso

            echo '--- Copying official releng profile ---'
            cp -a /usr/share/archiso/configs/releng/. /data/archiso

            echo '--- Modifying releng profile for DevOS ---'
            # 1. Меняем метку диска
            sed -i 's/iso_label=\"ARCH_\"/iso_label=\"DEVOS\"/g' /data/archiso/profiledef.sh
            sed -i 's/archisolabel=\${iso_label}/archisolabel=DEVOS/g' /data/archiso/grub/grub.cfg
            sed -i 's/archisolabel=\${iso_label}/archisolabel=DEVOS/g' /data/archiso/syslinux/archiso_sys.cfg

            # 2. Добавляем наш репозиторий и пакеты
            echo -e \"\n[devos-repo]\nSigLevel = Optional TrustAll\nServer = file:///data/repo\" >> /data/archiso/pacman.conf
            echo -e \"\n# DevOS Packages\ncalamares\ndevos-tools-core\ngdm\ngnome-shell\ngnome-terminal\ngnome-control-center\nnautilus\nfirefox\n\" >> /data/archiso/packages.x86_64

            # --- !!! НОВАЯ, ПРАВИЛЬНАЯ МАГИЯ ЗДЕСЬ !!! ---
            echo '--- Customizing Live Environment for Auto-Login ---'
            
            # 3. Настраиваем getty@tty1 для автоматического входа пользователя root
            # Создаем директорию для оверрайда сервиса
            mkdir -p /data/archiso/airootfs/etc/systemd/system/getty@tty1.service.d
            # Создаем сам файл оверрайда
            echo -e '[Service]\nExecStart=\nExecStart=-/usr/bin/agetty --autologin root --noclear %I \$TERM' > /data/archiso/airootfs/etc/systemd/system/getty@tty1.service.d/autologin.conf

            # 4. Добавляем в .bash_profile пользователя root команду для запуска GNOME
            # Этот код выполнится сразу после автоматического входа в tty1
            echo -e 'if [[ -z \$DISPLAY && \$XDG_VTNR -eq 1 ]]; then\n  exec startx\nfi' >> /data/archiso/airootfs/root/.bash_profile
            
            # 5. Создаем файл .xinitrc для root, чтобы startx знал, что запускать
            echo -e 'exec gnome-session' > /data/archiso/airootfs/root/.xinitrc

            # 6. Включаем NetworkManager
            mkdir -p /data/archiso/airootfs/etc/systemd/system/multi-user.target.wants
            ln -sf /usr/lib/systemd/system/NetworkManager.service /data/archiso/airootfs/etc/systemd/system/multi-user.target.wants/NetworkManager.service

            # 7. Создаем .desktop файл для авто-запуска Calamares
            mkdir -p /data/archiso/airootfs/root/.config/autostart
            echo -e '[Desktop Entry]\nName=Calamares\nExec=calamares_polkit\nType=Application\nIcon=calamares' > /data/archiso/airootfs/root/.config/autostart/calamares.desktop

            echo '--- Creating local repository database ---'
            repo-add /data/repo/devos-repo.db.tar.gz /data/repo/*.pkg.tar.zst

            echo '--- Building ISO Image from modified releng profile ---'
            mkarchiso -v -w /tmp/archiso-work -o /data/out /data/archiso
          "

      - name: Upload ISO to a new Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: test-build-${{ github.run_number }}
          name: "Test Build ${{ github.run_number }} (arch branch)"
          body: |
            Автоматическая тестовая сборка из ветки `arch`.
            Commit: `${{ github.sha }}`
          files: |
            out/archlinux-*.iso
          prerelease: true